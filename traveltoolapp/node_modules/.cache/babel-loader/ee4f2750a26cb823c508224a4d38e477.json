{"ast":null,"code":"import _slicedToArray from \"/home/ich/Documents/programming/Travel Helper - TRACE PROJECT 3/traveltool/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ich/Documents/programming/Travel Helper - TRACE PROJECT 3/traveltool/src/components/CountryPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction CountryPage(props) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        country = _useState2[0],\n        setCountry = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currency = _useState4[0],\n        setCurrency = _useState4[1];\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/name/\".concat(props.match.params.name)).then(countryResponse => {\n      const country = countryResponse.data[0];\n      setCountry(country);\n      axios.get(\"https://api.exchangeratesapi.io/latest?base=USD\").then(currencyResponse => {\n        setCurrency(currencyResponse.data.rates[country.currencies[0].code]);\n      });\n    }).catch(() => {\n      console.error(\"failure\");\n    });\n  }, [props.match.params.name]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, country ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: country.flag,\n    alt: \"flag of italy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), country.name, \" \", currency) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"loading\"));\n}\n\nexport default CountryPage;","map":{"version":3,"sources":["/home/ich/Documents/programming/Travel Helper - TRACE PROJECT 3/traveltool/src/components/CountryPage.js"],"names":["React","useEffect","useState","axios","CountryPage","props","country","setCountry","currency","setCurrency","get","match","params","name","then","countryResponse","data","currencyResponse","rates","currencies","code","catch","console","error","flag"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,oBACMH,QAAQ,CAAC,IAAD,CADd;AAAA;AAAA,QACjBI,OADiB;AAAA,QACRC,UADQ;;AAAA,qBAEQL,QAAQ,CAAC,IAAD,CAFhB;AAAA;AAAA,QAEjBM,QAFiB;AAAA,QAEPC,WAFO;;AAKxBR,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACO,GAAN,iDAAmDL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,IAAtE,GAA8EC,IAA9E,CAAmFC,eAAe,IAAI;AAClG,YAAMT,OAAO,GAAGS,eAAe,CAACC,IAAhB,CAAqB,CAArB,CAAhB;AACAT,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAH,MAAAA,KAAK,CAACO,GAAN,oDAA6DI,IAA7D,CAAkEG,gBAAgB,IAAI;AAClFR,QAAAA,WAAW,CAACQ,gBAAgB,CAACD,IAAjB,CAAsBE,KAAtB,CAA4BZ,OAAO,CAACa,UAAR,CAAmB,CAAnB,EAAsBC,IAAlD,CAAD,CAAX;AACH,OAFD;AAGH,KAND,EAMGC,KANH,CAMS,MAAM;AACXC,MAAAA,OAAO,CAACC,KAAR,CAAc,SAAd;AACH,KARD;AASH,GAVQ,EAUN,CAAClB,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,IAApB,CAVM,CAAT;AAcA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,OAAO,GACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,GAAG,EAAEA,OAAO,CAACkB,IAAlB;AAAwB,IAAA,GAAG,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEClB,OAAO,CAACO,IAFT,OAEgBL,QAFhB,CADQ,GAMN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPN,CADJ;AAWH;;AAID,eAAeJ,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction CountryPage(props) {\n    const [country, setCountry] = useState(null);\n    const [currency, setCurrency] = useState(null);\n\n\n    useEffect(() => {        \n        axios.get(`https://restcountries.eu/rest/v2/name/${props.match.params.name}`).then(countryResponse => {\n            const country = countryResponse.data[0];\n            setCountry(country)\n            axios.get(`https://api.exchangeratesapi.io/latest?base=USD`).then(currencyResponse => {\n                setCurrency(currencyResponse.data.rates[country.currencies[0].code])\n            })\n        }).catch(() => {\n            console.error(\"failure\");\n        });\n    }, [props.match.params.name]);\n\n    \n\n    return (\n        <React.Fragment>\n            {country ? \n            <div>\n            <img src={country.flag} alt=\"flag of italy\"></img> \n            {country.name} {currency}\n            </div> \n            \n            : <div>loading</div>}\n        </React.Fragment>\n    );\n}\n\n\n\nexport default CountryPage;"]},"metadata":{},"sourceType":"module"}